name: Code Validation and Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

env:
  NODE_VERSION: '20'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Job 1: Code Quality & Validation
  validate:
    name: 🔍 Code Quality & Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🧹 Run ESLint
        run: npm run lint

      - name: 🔎 TypeScript Check
        run: npx tsc --noEmit

      - name: 🎨 Check formatting (optional)
        run: |
          if [ -f "package.json" ] && grep -q "prettier" package.json; then
            npx prettier --check .
          else
            echo "Prettier not configured, skipping format check"
          fi
        continue-on-error: true

  # Job 2: Build Test
  build-test:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Test Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: 📊 Check build output
        run: |
          echo "Build test completed successfully!"
          if [ -d "out" ]; then
            echo "Static export generated successfully"
            echo "Static export size:"
            du -sh out/
            echo "Generated files:"
            find out -name "*.html" -o -name "*.js" -o -name "*.css" | head -10
          else
            echo "No 'out' directory found - checking .next"
            ls -la .next/ || echo "No build output found"
          fi

  # Job 3: Security & Dependencies Check
  security:
    name: 🔒 Security & Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🛡️ Run npm audit
        run: |
          echo "🔍 Checking for security vulnerabilities..."
          npm audit --audit-level=moderate
          echo "✅ Security audit completed"

      - name: 📋 Check for outdated packages
        run: |
          echo "📦 Checking for outdated packages..."
          npm outdated || echo "ℹ️ Some packages may be outdated (non-blocking)"
        continue-on-error: true

      - name: 🔒 Additional Security Checks
        run: |
          echo "🔍 Additional security validations..."
          # Check for common security issues in package.json
          if grep -q "http://" package*.json; then
            echo "❌ Found insecure HTTP URLs in package files"
            exit 1
          fi
          echo "✅ No insecure HTTP URLs found"
          
          # Check for potentially dangerous scripts
          if grep -E "(rm -rf|sudo|curl.*sh|wget.*sh)" package.json; then
            echo "⚠️ Potentially dangerous scripts found in package.json"
            echo "Please review these scripts carefully"
          fi
          echo "✅ Security checks completed" 